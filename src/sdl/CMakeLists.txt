FIND_PACKAGE( SDL2 REQUIRED ) 

GET_TARGET_PROPERTY( SDL_IMPORT_LIB      SDL2::SDL2 IMPORTED_LOCATION_NOCONFIG ) 
GET_TARGET_PROPERTY( SDL_IMPORT_LIB_NAME SDL2::SDL2 IMPORTED_SONAME_NOCONFIG   ) 
SET( NYX_WINDOW_SOURCES 
     Window.cpp
   )
      
SET( NYX_WINDOW_HEADERS
     Window.h
   )

SET( NYX_WINDOW_LIBRARIES
      ${SDL_IMPORT_LIB}
      nyx_event 
    )

ADD_LIBRARY               ( nyx_window SHARED  ${NYX_WINDOW_SOURCES} ${NYX_WINDOW_HEADERS} )
TARGET_LINK_LIBRARIES     ( nyx_window PUBLIC  ${NYX_WINDOW_LIBRARIES}                     )
TARGET_INCLUDE_DIRECTORIES( nyx_window PRIVATE ${NYX_WINDOW_INCLUDE_DIRS}                  )

BUILD_TEST( TARGET nyx_window )

INSTALL( FILES ${SDL_IMPORT_LIB} DESTINATION ${EXPORT_LIB_DIR} COMPONENT release )

IF( UNIX )
  GET_FILENAME_COMPONENT( SDL_STUPID_INSTALL_DIR ${SDL_IMPORT_LIB} DIRECTORY )
  INSTALL( FILES ${SDL_STUPID_INSTALL_DIR}/${SDL_IMPORT_LIB_NAME} DESTINATION ${EXPORT_LIB_DIR} COMPONENT release )
ENDIF()

INSTALL( TARGETS nyx_window EXPORT Nyx COMPONENT release 
           RUNTIME  DESTINATION ${EXPORT_LIB_DIR}
           ARCHIVE  DESTINATION ${EXPORT_LIB_DIR}
           LIBRARY  DESTINATION ${EXPORT_LIB_DIR}
           INCLUDES DESTINATION ${EXPORT_INCLUDE_DIR} )

